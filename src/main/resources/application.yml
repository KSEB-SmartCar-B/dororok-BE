server:
  port: 8080
  # nginx에서 리버스 프록시 이용하므로 관련 설정
  forward-headers-strategy: framework

spring:

  # H2 Database 설정
  datasource:
#    driver-class-name: org.h2.Driver
#    url: 'jdbc:h2:mem:test'   # H2 DB 연결 주소 (In-Memory Mode)
#    #url: 'jdbc:h2:~/test'    # H2 DB 연결 주소 (Embedded Mode)
#    username: sa
#    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      max-lifetime: 177000 # 177초

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update        # DB 초기화 전략 (none, create, create-drop, update, validate)
    properties:
      hibernate:
        format_sql: false      # 쿼리 로그 포맷 (정렬)
        show_sql: false        # 쿼리 로그 출력

    springdoc:
      swagger-ui:
        #path: /api-test  # swagger-ui 접근 경로에 대한 별칭, 해당 주소로 접속해도 http://localhost:9999/swagger-ui/index.html로 리다이렉션 됨.

        groups-order: DESC # path, query, body, response 순으로 출력

        tags-sorter: alpha # 태그를 알파벳 순으로 정렬

        operations-sorter: method  # delete - get - patch - post - put 순으로 정렬, alpha를 사용하면 알파벳 순으로 정렬 가능

      #paths-to-match:
        #- /api/** # swagger-ui에 표시할 api의 엔드포인트 패턴

 #redis 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 10000ms
      lettuce:
          pool:
            max-active: 16
            max-idle: 8
            min-idle: 4
            max-wait: 10000ms


jwt:
  secret: 18b88ec0b2a5b0d2dafe5113d316a743bb7872269f6f9b106948c968cf0051fa
  access:
    token:
      expiration: 18000000 # 5시간
  refresh:
    token:
      expiration: 1209600000 # 2주
